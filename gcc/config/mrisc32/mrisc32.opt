; Options for the MRISC32 compiler port.
;
; Copyright (C) 2019-2020 Free Software Foundation, Inc.
; Contributed by Marcus Geelnard <m@bitsnbites.eu>
;
; This file is part of GCC.
;
; GCC is free software; you can redistribute it and/or modify it under
; the terms of the GNU General Public License as published by the Free
; Software Foundation; either version 3, or (at your option) any later
; version.
;
; GCC is distributed in the hope that it will be useful, but WITHOUT ANY
; WARRANTY; without even the implied warranty of MERCHANTABILITY or
; FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
; for more details.
;
; You should have received a copy of the GNU General Public License
; along with GCC; see the file COPYING3.  If not see
; <http://www.gnu.org/licenses/>.

HeaderInclude
config/mrisc32/mrisc32-opts.h

; Options for controlling the compiler.

mhard-float
Target Mask(HARD_FLOAT)
Enable hardware floating point instructions.

mdiv
Target Mask(DIV)
Enable hardware div and rem instructions.

mpacked-ops
Target Mask(PACKED_OPS)
Enable packed operation instructions.

msaturating-ops
Target Mask(SATURATING_OPS)
Enable saturating operation instructions.

mvector-ops
Target Mask(VECTOR_OPS)
Enable vector instructions.

mcmodel=
Target RejectNegative Joined Enum(cmodel) Var(mrisc32_current_cmodel) Init(MRISC32_CMODEL_LARGE)
Specify the code model.

; Type and values for the -mcmodel option.
Enum
Name(cmodel) Type(enum mrisc32_cmodel)
The code model option names for -mcmodel:

EnumValue
Enum(cmodel) String(small) Value(MRISC32_CMODEL_SMALL)

EnumValue
Enum(cmodel) String(large) Value(MRISC32_CMODEL_LARGE)

; Options for controlling the linker.

msim
Target RejectNegative
Link to the simulator runtime.

mno-crt0
Target RejectNegative
Do not link to the default CRT0 implementation.

mno-ctor-dtor
Target RejectNegative
Do not link to the default global constructor/destructor implementation (C++).
